stages:
  - build
  - test
  - lint
  - deploy

log:
  stage: test
  script:
    - export

build:
  image: docker:20
  stage: build
  variables:
    CACHE_TAG: "$CI_REGISTRY_IMAGE:$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CACHE_TAG || true
    - docker build --cache-from $CACHE_TAG .
  only:
    - merge_requests

tests:
  image: golang:1.18
  stage: test
  artifacts:
    paths:
      - coverage.out
      - report.json
    expire_in: 1 week
  script:
    - go install github.com/swaggo/swag/cmd/swag@latest
    - swag init #--parseDependency
    - go test -coverprofile=coverage.out -json ./... > report.json
  only:
    - merge_requests
    - develop

code-quality:
  stage: lint
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - develop

deploy-develop:
  image: docker:20
  stage: deploy
  variables:
    TAG: "$CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $TAG || true
    - docker build --cache-from $TAG --tag $TAG .
    - docker push $TAG
  only:
    - develop

deploy-main:
  image: jdrouet/docker-with-buildx:stable
  stage: deploy
  variables:
    TAG: "$CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker buildx create --use
    - docker pull $TAG || true
    - docker buildx build --platform linux/arm/v7,linux/arm64/v8,linux/amd64 --push --cache-from $TAG --tag $TAG .
  only:
    - main
